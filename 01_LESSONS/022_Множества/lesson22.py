##############################################
# 022_Множества
# python 3.x
# WebForMySelf - Андрей Кудлай, 2019
##############################################
# Writing sgiman, 2025

# МАССИВЫ: строки, списки, кортежи, множества
# Множества - неупорядоченная коллекция (массив) - без индексирования
# Множества без дубликатов (только уникальные элементы) - дубликаты удаляются по умолчанию
# [] - списки
# () - кортежи
# {} - множества, словари

s = {'apple', 'orange', 'apple', 'pear', 'orange', 'banana'}  # множество
s2 = set('hello')  # конструктор set
s3 = {i for i in range(1, 11)}  # генератор множества

s4 = set()  # пустое множество {...}
s5 = {}  # пустой словарь {...}

print()
print(s)
print(s2)
print(s3)
print(s4)
print('-' * 80)

##############################################
nums = [1, 2, 3, 3, 1, 2, 4, 5]     # список
num_t = 1, 2, 3, 3, 1, 2, 4, 5      # кортеж
num_m = {1, 2, 3, 3, 1, 2, 4, 5}    # множество

print('СПИСОК: ' + str(nums),
      'КОРТЕЖ: ' + str(num_t),
      'МНОЖЕСТВО: ' + str(num_m), sep='\n')
print('.' * 80)

nums2 = set(nums)  # создать множество из списка (дубликаты удаляются)
print('NUMS2 (множество):', nums2)

nums3 = list(nums2)  # конвертировать множество в список
print('NUMS3 (список):', nums3)

a = set('abracadabra')
b = set('alacazam')

###########################
# Операции над множествами
###########################
c = a - b  # вычитание (SUB) - убираем из "a" все буквы, которые есть в "b"
d = a | b  # объединение (OR) - буквы или в "a" или в "b" (без дубликатов)
e = a & b  # пересечение (AND) - буквы и в "a" и в "b" (одинаковые без дублей)
f = a ^ b  # множество из элементов (исключающее ИЛИ) - буквы в "a" или "b", но не в обоих (одинаковые исключаются)

print()
print('ORIG:')
print(a, b, sep='\n')
print('-' * 80)
print('LOGIC:')
print(c, d, e, f, sep='\n')
print()

############################################
# Методы для обработки множеств
############################################
# set.copy() - возвращает копию множества
# set.add(elem) - добавляет элемент в множество
# set.remove(elem) - удаляет элемент из множества. KeyError, если такого элемента не существует
# set.discard(elem) - удаляет элемент, если он находится в множестве
# set.pop() - возвращает и удаляет первый элемент из множества. Так как множества не упорядочены, нельзя точно сказать, какой элемент будет первым.
# set.clear() - очистка множества

s = {'apple', 'orange', 'apple', 'pear', 'orange', 'banana'}
s2 = s.copy()  # скопировать множество
print(s, id(s))
print(s2, id(s2))

print('-' * 80)
s.add('test')  # добавить элемент множества
print('ADD:', s)
print('-' * 80)

s.remove('test')  # удалить элемент множества (error - если нет)
print('REMOVE:', s)
s.discard('apple')  # удалить элемент множества (no error)
print('DISCARD:', s)

# Проверить элемент множества
if 'apple' in s:
    print('OK APPLE')
else:
    print('NO APPLE')

print('-' * 80)

##############################################
s.clear()  # очистить множество
print(s)

##############################################
a = frozenset('hello')  # замороженное множество (не изменяемый тип множества)
print(a)
print('-' * 80)

##############################################
# Доступ к элементам множества
s = {'apple', 'orange', 'apple', 'pear', 'orange', 'banana'}
for i in s:
    print(i)
