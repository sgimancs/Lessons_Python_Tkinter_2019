##############################################
# 017_Изменяемые и неизменяемые объекты
# python 3.x
# WebForMySelf - Андрей Кудлай, 2019
##############################################
# Writing sgiman, 2025

# id(obj) -  уникальный идентификатор объекта (адрес)

# Неизменяемые объекты
x = 10
print('X: ', x, id(x))
x = 20
print('X NEW: ', x, id(x))
print()

s = 'hello'
print('S: ', s, id(s))
s += ' world'
print('S + WORLD: ', s, id(s))
print()

#-------------------------------------------
# Изменяемые объекты
# Списки - изменяемые объекты
#-------------------------------------------
l = [1, 2, 3]
print('L: ', l, id(l))
l.append(5)
print('L APPEND: ', l, id(l))
print()

#-------------------------------------------
# Неизменяемые объекты
# При присвоении создаётся новый объект
#-------------------------------------------
x = 10  # новый объект (с новым адресом id)
y = x
print('X: ', x, id(x))
print('Y: ', y, id(y))
print()

x = 15  # новый объект (с новым адресом id)
print('X: ', x, id(x))     # новый адрес
print('Y: ', y, id(y))     # прежний адрес
print()

#------------------------------------------------
# Списки - изменяемые объекты
# Список имеет одну ссылку при изменении данных
#------------------------------------------------
l1 = [1, 2, 3]
l2 = l1         # указатель на одну и ту же ячейку памяти
l3 = l1.copy()  # копия списка
l4 = l1[:]      # аналог метода copy() для списка

print('L1: ', l1, id(l1))
print('L2: ', l2, id(l2))
print('L3: ', l3, id(l3))
print('L4: ', l4, id(l4))
print('-'*20)

l1.append((5))
print('L1 APPEND:', l1, id(l1))
print('L2=L1: ', l2, id(l2))
print('-'*20)

#################################################
x = 10
print(x)
del x
# print(x)
print()
