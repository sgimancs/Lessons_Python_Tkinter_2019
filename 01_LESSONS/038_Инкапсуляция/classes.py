##################################################
# КЛАССЫ (ИНКАПСУЛЯЦИЯ)
##################################################
class Person:

    # __parameter - защищенный (инкапсулирующий) - не доступен
    # _parameter - уровень соглашений для кодеров (считается защищённым параметром) - доступен

    # --------------------------------
    # КОНСТРУКТОР
    # --------------------------------
    def __init__(self, name):
        self.name = name  # доступный (открытое св-во)
        self.__age = 20  # защищенный (закрытое св-во)

    # --------------------------------
    # ВЫВОД
    # --------------------------------
    def print_info(self):
        print(f'Name: {self.name}, Age: {self.__age}')

    # ГЕТОРЫ И СЕТОРЫ
    # -----------------------------------------------------
    #  СПОСОБ 1 (классика)
    # -----------------------------------------------------
    def get_age(self):
        return self.__age  # вернуть защищённый параметр

    def set_age(self, value):
        if value in range(1, 101):
            self.__age = value  # установить защищённый параметр
        else:
            print('Wrong age')

    # -----------------------------------------------------
    #  СПОСОБ 2 (декораторы)
    # -----------------------------------------------------
    # GET
    @property
    def age(self):
        return self.__age

    # SET
    @age.setter
    def age(self, value):
        if value in range(1, 101):
            self.__age = value
        else:
            print('Wrong age')
